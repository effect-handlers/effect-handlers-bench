import immutable/list
import immutable/option
import io/args
import text/string

effect State {
    def get(): Int
    def set(i: Int): Unit
}

def countdown(): Int / State = {
    val i = do get()
    if (i == 0) {
        i
    } else {
        do set(i-1)
        countdown()
    }
}

def run(n: Int) = {
    var s = n
    try {
        countdown()
    } with State {
        def get() = { resume(s) }
        def set(i: Int) = { s = i; resume(()) }
    }
}

def main() = commandLineArgs() match {
    case Nil() => println(run(5))
    case Cons(x, Nil()) => toInt(x) match {
        case None() => println("Unexpected non-integer '" ++ show(x) ++ "'")
        case Some(i) => println(run(i))
    }
    case other => println("Expects zero or one argument, not '" ++ show(size(other)) ++ "'")
}