import immutable/list
import immutable/option
import io/args
import text/string

effect Operator(x: Int): Unit

def abs(i: Int): Int = if (i < 0) { 0 - i } else { i }

def loop(i: Int, s: Int): Int / Operator = {
    if (i == 0) { s } else {
        do Operator(i);
        loop(i - 1, s)
    }
}

def run(n: Int, s: Int): Int = try {
    loop(n, s)
} with Operator { (x: Int) =>
    val y = resume(())
    mod(abs(x - (503 * y) + 37), 1009)
}

def repeat(n: Int): Int = {
    def step(l: Int, s: Int): Int = {
        if (l == 0) { s } else {
            step(l-1, run(n,s))
        }
    }
    step(1000, 0)
}

def main() = commandLineArgs() match {
    case Nil() => println(repeat(20000))
    case Cons(x, Nil()) => toInt(x) match {
        case None() => println("Unexpected non-integer '" ++ show(x) ++ "'")
        case Some(i) => println(repeat(i))
    }
    case other => println("Expects zero or one argument, not '" ++ show(size(other)) ++ "'")
}
